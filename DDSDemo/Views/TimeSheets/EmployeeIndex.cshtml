@model IPagedList<DDSDemoDAL.TimeSheet>

@using PagedList;
@using PagedList.Mvc;


@{
    ViewBag.Title = "EmployeeIndex";
}

<h2>TimeSheets</h2>
<h4>
    Employee:
    @Html.DisplayFor(model => model[1].Employee.FullName)
</h4>

<p>
    @Html.ActionLink("Create New", "EmployeeCreate")
</p>
<table class="table">
    <tr>
        <th>
            Client
        </th>
        <th>
           @Html.ActionLink("Start Time", "EmployeeIndex", new { sortBy = ViewBag.SortStartTimeParameter })
        <span class="caret"></span>
        </th>
        <th>
            @Html.ActionLink("Stop Time", "EmployeeIndex", new { sortBy = ViewBag.SortStopTimeParameter })
            <span class="caret"></span>
        </th>
        <th>
            Elapsed Time
        </th>
        <th>
            Note
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr
       onclick="location.href = '@(Url.Action("EmployeeManage", "TimeSheets", new { id = item.ID, page = Model.PageNumber, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"], sortBy = Request.QueryString["sortBy"] }))'">

        <td>
            @Html.DisplayFor(modelItem => item.Client.CompanyName)
        </td>
        <td>
            @(item.StartTime.HasValue ? item.StartTime.Value.ToShortTimeString() : "--") <br/>
            @(item.StartTime.HasValue ? item.StartTime.Value.ToShortDateString() : "--") 
        </td>
        <td>
            @(item.StopTime.HasValue ? item.StopTime.Value.ToShortTimeString() : "--") <br />
            @(item.StopTime.HasValue ? item.StopTime.Value.ToShortDateString() : "--")
        </td>
        <td>
            @item.ElapsedTime.ToString(@"hh\:mm\:ss")
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Note)
        </td>
        <td>
            @Html.ActionLink("Manage", "EmployeeManage", new { id = item.ID, page = Model.PageNumber, sortBy = Request.QueryString["sortBy"] })
        </td>
    </tr>
}

</table>
@Html.PagedListPager(Model, page => Url.Action("EmployeeIndex", new { page, id = Request.QueryString["id"], sortBy = Request.QueryString["sortBy"] }))
