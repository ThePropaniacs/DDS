@model IPagedList<DDSDemo.Models.TimeSheetForList>

@using PagedList;
@using PagedList.Mvc;


@{
    ViewBag.Title = "ClientIndex";
}
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery-ui.js"></script>


<h2>Timesheets</h2>
<h4>
    Client:
    @Html.DisplayFor(model => model[1].Client.CompanyName)
</h4>


@using (Html.BeginForm())
{
    
  @Html.AntiForgeryToken()  
<table class="table">
    <tr>
        <th>
            Employee
        </th>
        <th>
            @Html.ActionLink("Start Time", "ClientIndex", new { sortBy = ViewBag.SortStartTimeParameter})
            <span class="caret"></span>
        </th>
        <th>
            @Html.ActionLink("Stop Time", "ClientIndex", new { sortBy = ViewBag.SortStopTimeParameter })
            <span class="caret"></span>
        </th>
        <th>
            Elapsed Time
        </th>
        <th>
            Note
        </th>
        <th></th>

        <th style="text-align:center; width:20%">
            <div class="btn-group">
                <button class="btn btn-success btn-sm" type="submit" id="true" name="Approve" value="true" style="border-top-left-radius:5px; border-bottom-left-radius:5px">Approve</button>
                <button class="btn btn-danger btn-sm" type="submit" id="false" name="Deny" value="true">Deny</button>
                <button class="btn btn-warning btn-sm" type="button" id="checkAll" name="checkAll" value="true" style="border-top-right-radius:5px; border-bottom-right-radius:5px">Select All</button>
            </div>
        </th>
    </tr>

        @for (var i = 0; i < Model.Count; i++)
        {

                    <tr
                       @{
                        if (Model[i].Approved == true) {<text> style="background-color: #43ac6a; color:navajowhite" </text> }
                        else if (Model[i].Approved == false) {<text> style="background-color: #f04124; color:navajowhite"</text> }
                        else if (Model[i].Approved == null) {<text> style="background-color: #fafafa;"</text> }
                       }
                        >

                        <td onclick="location.href = '@(Url.Action("ClientEdit", "TimeSheets", new { id = Model[i].ID, page = Model.PageNumber, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"], sortBy = Request.QueryString["sortBy"] }))'"
>
                            @Html.DisplayFor(modelItem => Model[i].Employee.FullName)
                        </td>
                        <td onclick="location.href = '@(Url.Action("ClientEdit", "TimeSheets", new { id = Model[i].ID, page = Model.PageNumber, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"], sortBy = Request.QueryString["sortBy"] }))'"
>
                            @(Model[i].StartTime.HasValue ? Model[i].StartTime.Value.ToShortTimeString() : "--") <br />
                            @(Model[i].StartTime.HasValue ? Model[i].StartTime.Value.ToShortDateString() : "--")
                        </td>
                        <td onclick="location.href = '@(Url.Action("ClientEdit", "TimeSheets", new { id = Model[i].ID, page = Model.PageNumber, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"], sortBy = Request.QueryString["sortBy"] }))'"
>
                            @(Model[i].StopTime.HasValue ? Model[i].StopTime.Value.ToShortTimeString() : "--") <br />
                            @(Model[i].StopTime.HasValue ? Model[i].StopTime.Value.ToShortDateString() : "--")
                        </td>
                        <td onclick="location.href = '@(Url.Action("ClientEdit", "TimeSheets", new { id = Model[i].ID, page = Model.PageNumber, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"], sortBy = Request.QueryString["sortBy"] }))'"
>
                            @Model[i].ElapsedTime.ToString(@"hh\:mm\:ss")
                        </td>
                        <td onclick="location.href = '@(Url.Action("ClientEdit", "TimeSheets", new { id = Model[i].ID, page = Model.PageNumber, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"], sortBy = Request.QueryString["sortBy"] }))'"
>
                            @Html.DisplayFor(modelItem => Model[i].Note)
                        </td>
                        <td style="color:black" onclick="location.href = '@(Url.Action("ClientEdit", "TimeSheets", new { id = Model[i].ID, page = Model.PageNumber, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"], sortBy = Request.QueryString["sortBy"] }))'"
>
                            @Html.ActionLink("Review", "ClientEdit", new { id = Model[i].ID, page = Model.PageNumber, sortBy = Request.QueryString["sortBy"] })
                        </td>
                        <td style="text-align:center; width:20%">
                            @Html.HiddenFor(modelItem => Model[i].ID)
                            @Html.HiddenFor(modelItem => Model[i].Approved)
                            @if (Model[i].StopTime.HasValue)
                            {
                                @Html.EditorFor(modelItem => Model[i].IsChecked, new { @class = "form-control" , id = "check"})
                            }
                            
                        </td>

                        
                    </tr>
                
        }
    </table>
}
@Html.PagedListPager(Model, page => Url.Action("ClientIndex", new { page = page, sortBy = Request.QueryString["sortBy"] }))
<script>
    $(document).ready(function () {
        $("#checkAll").click(function () {
            $("input").trigger("click");
        });
    });
</script>